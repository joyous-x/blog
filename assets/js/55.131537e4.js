(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{663:function(a,n,s){"use strict";s.r(n);var e=s(15),t=Object(e.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"python-环境问题记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-环境问题记录"}},[a._v("#")]),a._v(" Python 环境问题记录")]),a._v(" "),s("h2",{attrs:{id:"常用源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用源"}},[a._v("#")]),a._v(" 常用源")]),a._v(" "),s("p",[a._v("有两种方式修改 python 源：")]),a._v(" "),s("ol",[s("li",[a._v("编辑配置文件 ~/.pip/pip.conf，添加内容如下："),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[global]\nindex-url = https://pypi.doubanio.com/simple\ntrusted-host = pypi.doubanio.com\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])]),a._v(" "),s("li",[a._v("通过命令行的 -i 参数指定源"),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("pip install tensorflow -i https://pypi.douban.com/simple\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])]),a._v(" "),s("h2",{attrs:{id:"conda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conda"}},[a._v("#")]),a._v(" "),s("a",{attrs:{href:"https://www.anaconda.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Conda"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("Conda 是一个开源跨平台语言无关的包管理与环境管理系统，允许用户通过"),s("em",[a._v("虚拟环境")]),a._v("方便地安装不同版本的二进制软件包与该计算平台需要的所有库。使用它可以方便、快捷的创建出用于科学计算、大数据等相关的一个 python 环境，例如：可以很方便的处理掉 windows 环境下 ssl 安装的问题等等.")]),a._v(" "),s("p",[a._v("常用命令有：")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("conda env list")])]),a._v(" "),s("li",[s("code",[a._v("conda create -n [env.name] [python=3.8 | --clone exists.env.name | -f environment.xml]")]),a._v(" "),s("ul",[s("li",[a._v("可以指定 python 版本，也可以 clone 现有的环境")])])]),a._v(" "),s("li",[s("code",[a._v("conda activate [env.name]")])]),a._v(" "),s("li",[s("code",[a._v("conda deactivate [env.name]")])]),a._v(" "),s("li",[s("code",[a._v("conda remove -n [env.name] --all")])]),a._v(" "),s("li",[s("code",[a._v("conda install [package(=version)]")])])]),a._v(" "),s("p",[a._v("需要注意的是，"),s("em",[a._v("在window环境下，需要使用 Anaconda Prompt 来运行相关的指令")])]),a._v(" "),s("h3",{attrs:{id:"error-packagesnotfounderror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-packagesnotfounderror"}},[a._v("#")]),a._v(" error : PackagesNotFoundError")]),a._v(" "),s("p",[a._v("有些时候，在安装 package 时，会出现这样的错误：\n"),s("code",[a._v("PackagesNotFoundError: The following packages are not available from current channels:")])]),a._v(" "),s("p",[a._v("这时，可以通过以下操作尝试处理：")]),a._v(" "),s("ol",[s("li",[a._v("通过命令 "),s("code",[a._v("anaconda search -t conda pkg_name")]),a._v(" 查找 pkg 相关信息")]),a._v(" "),s("li",[a._v("search 指令会找到很多个版本的 pkg 相关信息，通过 "),s("code",[a._v("anaconda show [Name]")]),a._v(" 查看详细信息，其中包括 channel 信息\nc. 通过以下命令指定 channel 进行安装："),s("code",[a._v("conda install --channel https://xxxx [pkg_name]")]),a._v(" 或者 "),s("code",[a._v("conda install -c https://xxxx [pkg_name]")])])]),a._v(" "),s("h2",{attrs:{id:"ai-框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ai-框架"}},[a._v("#")]),a._v(" AI 框架")]),a._v(" "),s("h3",{attrs:{id:"pytorch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pytorch"}},[a._v("#")]),a._v(" Pytorch")]),a._v(" "),s("h3",{attrs:{id:"tensorflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow"}},[a._v("#")]),a._v(" Tensorflow")]),a._v(" "),s("ol",[s("li",[a._v("安装\n"),s("ul",[s("li",[a._v("参考： https://www.tensorflow.org/install/pip?hl=zh-cn")])])])]),a._v(" "),s("h2",{attrs:{id:"cuda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cuda"}},[a._v("#")]),a._v(" CUDA")]),a._v(" "),s("h3",{attrs:{id:"查看对gpu的支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看对gpu的支持"}},[a._v("#")]),a._v(" 查看对GPU的支持")]),a._v(" "),s("ul",[s("li",[a._v("查看显卡信息： "),s("code",[a._v("lspci | grep -i vga")]),a._v(" , 如果是 NVIDIA 可以用："),s("code",[a._v("lspci | grep -i nvidia")])]),a._v(" "),s("li",[a._v("查看NVIDIA显卡信息\n"),s("ul",[s("li",[s("code",[a._v("nvidia-smi")]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  Thu Feb  4 14:08:47 2021\n  +-----------------------------------------------------------------------------+\n  | NVIDIA-SMI 455.45.01    Driver Version: 455.45.01    CUDA Version: 11.1     |\n  |-------------------------------+----------------------+----------------------+\n  | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n  | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n  |                               |                      |               MIG M. |\n  |===============================+======================+======================|\n  |   0  GeForce RTX 3090    Off  | 00000000:65:00.0 Off |                  N/A |\n  | 80%   70C    P2   273W / 370W |   9957MiB / 24265MiB |    100%      Default |\n  |                               |                      |                  N/A |\n  +-------------------------------+----------------------+----------------------+\n  |   1  GeForce RTX 3090    Off  | 00000000:B3:00.0 Off |                  N/A |\n  | 57%   50C    P0   120W / 370W |      3MiB / 24268MiB |      0%      Default |\n  |                               |                      |                  N/A |\n  +-------------------------------+----------------------+----------------------+\n\n  +-----------------------------------------------------------------------------+\n  | Processes:                                                                  |\n  |  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n  |        ID   ID                                                   Usage      |\n  |=============================================================================|\n  |    0   N/A  N/A     76494      C   python                           1609MiB |\n  |    0   N/A  N/A   1848572      C   python                           8345MiB |\n  |    1   N/A  N/A     76494      C   python                              0MiB |\n  |    1   N/A  N/A   1848572      C   python                              0MiB |\n  +-----------------------------------------------------------------------------+\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br")])])]),a._v(" "),s("li",[a._v("注意，这个指令的结果会显示 CUDA Version (CUDA的版本信息)，此版本信息需要与 "),s("a",{attrs:{href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"noopener noreferrer"}},[a._v("pytorch"),s("OutboundLink")],1),a._v(" 的版本一致")])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);