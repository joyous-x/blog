(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{588:function(s,e,l){"use strict";l.r(e);var a=l(15),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,l=s._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[l("h2",{attrs:{id:"common"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[s._v("#")]),s._v(" Common")]),s._v(" "),l("ul",[l("li",[s._v("grep的查找，sed的编辑，awk在分析\n"),l("ul",[l("li",[s._v('grep -ar "select" ./conf')]),s._v(" "),l("li",[s._v("awk '{arr[$3]++}END{for(i in arr) print substr(i,0,length(i)-1)}'")])])]),s._v(" "),l("li",[s._v("truss、strace或ltrace : strace -p 34542 -s 128 -T")]),s._v(" "),l("li",[s._v("lsof\n"),l("ul",[l("li",[s._v("lsof | grep -i delete")])])]),s._v(" "),l("li",[s._v("dos2unix")]),s._v(" "),l("li",[s._v("tcpdump\n"),l("ul",[l("li",[s._v("tcpdump -i any -Xxns0 -c 100 host xx.xx.xx.xx and port xxxx")])])]),s._v(" "),l("li",[s._v("iftop")]),s._v(" "),l("li",[s._v("pstree\n"),l("ul",[l("li",[s._v("pstree -c -a > pstree.log")])])]),s._v(" "),l("li",[s._v("perf\n"),l("ul",[l("li",[s._v("perf top -p {pid}")])])]),s._v(" "),l("li",[s._v("top\n"),l("ul",[l("li",[s._v("内存排序 : top -a -n 1 -c")]),s._v(" "),l("li",[s._v("CPU排序  : top -n 1 -c")])])]),s._v(" "),l("li",[s._v("sudo nohup xxx &")]),s._v(" "),l("li",[s._v("pig\n"),l("ul",[l("li",[s._v("本地执行：pig -x local xxx.pig")])])]),s._v(" "),l("li",[s._v("xargs\n"),l("ul",[l("li",[s._v("管道是实现“将前面的标准输出作为后面的标准输入”")]),s._v(" "),l("li",[s._v("xargs是实现“将标准输入作为命令的参数”")]),s._v(" "),l("li",[l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v('echo "--help"|cat\necho "--help"|xargs cat\n')])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br")])]),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v('echo "--help"|cat\necho "--help"|xargs cat\n')])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br")])]),s._v("可以试试运行："),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v('echo "--help"|cat\necho "--help"|xargs cat\n')])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br")])])]),s._v(" "),l("li",[s._v("注：参数：-I 必须指定替换字符, -i\n是否指定替换字符-可选")]),s._v(" "),l("li",[s._v("ps -ef | pgrep %s | xargs -I {} kill -9 {}")])])]),s._v(" "),l("li",[s._v("ulimit\n"),l("ul",[l("li",[s._v("ulimit [type: -H/-S] [cmd: -a/...] [arg: 0/unlimited/...]")])])]),s._v(" "),l("li",[s._v("gdb\n"),l("ul",[l("li",[s._v("gdb [bin] core_dump")]),s._v(" "),l("li",[s._v("gdb attach [pid]\n"),l("ul",[l("li",[s._v("c : continue")])])])])]),s._v(" "),l("li",[l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("memcache:\n\ttelnet host port\n\t\t强制退出：ctrl + ']'\n\tstats\n\tstats cachedump slabs_id limit_num\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br")])]),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("memcache:\n\ttelnet host port\n\t\t强制退出：ctrl + ']'\n\tstats\n\tstats cachedump slabs_id limit_num\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br")])]),s._v("memcache"),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("memcache:\n\ttelnet host port\n\t\t强制退出：ctrl + ']'\n\tstats\n\tstats cachedump slabs_id limit_num\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br")])])]),s._v(" "),l("li",[l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("# 下面任务可以在 chkconfig 配置自启动\n/etc/init.d/*\n\n# 直接写到脚本里面\n/etc/rc.local\n\n# 查看某个服务（下面以redis为例）是否自启动\nchkconfig --list|grep redis\n# 如果 3，4，5为 off则不会自启动\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br"),l("span",{staticClass:"line-number"},[s._v("6")]),l("br"),l("span",{staticClass:"line-number"},[s._v("7")]),l("br"),l("span",{staticClass:"line-number"},[s._v("8")]),l("br"),l("span",{staticClass:"line-number"},[s._v("9")]),l("br")])]),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("# 下面任务可以在 chkconfig 配置自启动\n/etc/init.d/*\n\n# 直接写到脚本里面\n/etc/rc.local\n\n# 查看某个服务（下面以redis为例）是否自启动\nchkconfig --list|grep redis\n# 如果 3，4，5为 off则不会自启动\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br"),l("span",{staticClass:"line-number"},[s._v("6")]),l("br"),l("span",{staticClass:"line-number"},[s._v("7")]),l("br"),l("span",{staticClass:"line-number"},[s._v("8")]),l("br"),l("span",{staticClass:"line-number"},[s._v("9")]),l("br")])]),s._v("自启动"),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("# 下面任务可以在 chkconfig 配置自启动\n/etc/init.d/*\n\n# 直接写到脚本里面\n/etc/rc.local\n\n# 查看某个服务（下面以redis为例）是否自启动\nchkconfig --list|grep redis\n# 如果 3，4，5为 off则不会自启动\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br"),l("span",{staticClass:"line-number"},[s._v("5")]),l("br"),l("span",{staticClass:"line-number"},[s._v("6")]),l("br"),l("span",{staticClass:"line-number"},[s._v("7")]),l("br"),l("span",{staticClass:"line-number"},[s._v("8")]),l("br"),l("span",{staticClass:"line-number"},[s._v("9")]),l("br")])])]),s._v(" "),l("li",[s._v("没有配置host时，函数 gethostbyname 会返回空：\n"),l("ul",[l("li",[s._v("修改：/etc/hosts")]),s._v(" "),l("li",[s._v("修改(重启后依然生效)：/etc/sysconfig/network")]),s._v(" "),l("li",[s._v("执行(当次生效)：hostname xxx")])])]),s._v(" "),l("li",[s._v("zookeeper\n"),l("ul",[l("li",[s._v("获取头文件、库文件\n"),l("ul",[l("li",[s._v("解压后，进入src/c目录，执行：./configure && make && make install")]),s._v(" "),l("li",[s._v("头/库文件在：/usr/local/include/zookeeper、/usr/local/lib")])])]),s._v(" "),l("li",[s._v("c api使用/命名\n"),l("ul",[l("li",[s._v("一般以 zoo_ 、zookeeper_ 开头，有个函数 zerror")]),s._v(" "),l("li",[s._v("zookeeper_init 会注册全局回调，其中会接受session的断开和连接消息")]),s._v(" "),l("li",[s._v("操作前会有 a或者w或者aw，a表示会注册 xxx_completion_t 回调，w表示会注册 watcher_fn 回调")]),s._v(" "),l("li",[s._v("函数参数 int watch ，表示，是否触发全局回调")])])]),s._v(" "),l("li",[s._v("除了全局回调，其他回调都是一次性的")]),s._v(" "),l("li",[s._v("add 和 del 的结点必须是叶子结点：\n"),l("ul",[l("li",[s._v('add 如：在路径 "/" 上添加 "/xxx/leaf" 会失败')]),s._v(" "),l("li",[s._v('del 如：在路径 "/xxx/sub/leaf" 上删除 "/xxx/sub" 会失败')])])]),s._v(" "),l("li",[s._v("zookeeper_init 的连接过程是异步的，需要等待连接成功消息")])])]),s._v(" "),l("li",[s._v("redis\n"),l("ul",[l("li",[s._v("库/头文件\n"),l("ul",[l("li",[s._v("以源码安装后生成在：/usr/local/include/hiredis/和/usr/local/lib/")])])]),s._v(" "),l("li",[s._v('以默认配置启动服务："./src/redis-server redis.conf"')]),s._v(" "),l("li",[s._v('启动客户端测试程序："./src/redis-cli"')])])]),s._v(" "),l("li",[s._v("Makefile\n"),l("ul",[l("li",[s._v("静态库：-L[lib_dir] -l[lib(libname)] ：注意，gcc在查找库的时候会自动添加式lib前缀再查找")]),s._v(" "),l("li",[s._v("多线程：-lpthread ：注意，编译多线程时，需要链接pthread")])])]),s._v(" "),l("li",[s._v("条件变量是 GNU/Linux 提供的第三种同步工具(第一互斥体、第二这信号量)")]),s._v(" "),l("li",[s._v("crontab\n"),l("ul",[l("li",[s._v("用户 : /var/spool/cron/*")]),s._v(" "),l("li",[s._v("系统 : /etc/crontab、/etc/cron.d")]),s._v(" "),l("li",[s._v("不常用 : /etc/[cron.hourly、cron.daily、cron.weekly、cron.monthly]")])])]),s._v(" "),l("li",[s._v("hadoop\n"),l("ul",[l("li",[s._v("HADOOP_USER_NAME=hdfs hdfs dfs -rmr")])])]),s._v(" "),l("li",[s._v("pyspark\n"),l("ul",[l("li",[l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("sudo -u news_db spark-submit --master local[*] --conf spark.ui.port=12399 --queue offline --py-files pyspark_dashboard_util.py pyspark_dashboard.py\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("sudo -u news_db spark-submit --master local[*] --conf spark.ui.port=12399 --queue offline --py-files pyspark_dashboard_util.py pyspark_dashboard.py\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])]),s._v("提交任务 &"),l("div",{staticClass:"language- line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[s._v("sudo -u news_db spark-submit --master local[*] --conf spark.ui.port=12399 --queue offline --py-files pyspark_dashboard_util.py pyspark_dashboard.py\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br")])])]),s._v(" "),l("li",[s._v("打开文件\n"),l("ul",[l("li",[s._v('sc.textFile("file://[absolute path]")')]),s._v(" "),l("li",[s._v('sc.textFile("hdfs://url:port/[path]")')])])])])])]),s._v(" "),l("h2",{attrs:{id:"systemctl"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[s._v("#")]),s._v(" systemctl")]),s._v(" "),l("ul",[l("li",[s._v("CentOS 7\n"),l("ul",[l("li",[s._v("位置：服务systemctl脚本存放在：(配置文件优先级依次从低到高)\n"),l("ul",[l("li",[s._v("/usr/lib/systemd/，有系统 system 和用户 user 之分，即：/usr/lib/systemd/system 和 /usr/lib/systemd/user")]),s._v(" "),l("li",[s._v("/run/systemd/system")]),s._v(" "),l("li",[s._v("/etc/systemd/system")])])]),s._v(" "),l("li",[s._v("开机启动\n"),l("ul",[l("li",[s._v("systemctl enable [service, 如：nginx.service]")])])]),s._v(" "),l("li",[s._v("关机/重启\n"),l("ul",[l("li",[s._v("systemctl poweroff")]),s._v(" "),l("li",[s._v("systemctl reboot")])])])])])]),s._v(" "),l("h2",{attrs:{id:"git"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),l("ul",[l("li",[s._v("create\n"),l("ul",[l("li",[s._v("local\n"),l("ul",[l("li",[s._v("git checkout -b "),l("branch",[s._v(" [origin/"),l("branch",[s._v("]\n"),l("ul",[l("li",[s._v("默认是基于本地HEAD创建分支")])])])],1)],1)])]),s._v(" "),l("li",[s._v("remote\n"),l("ul",[l("li",[s._v("git push A B:C\n"),l("ul",[l("li",[l("em",[s._v("其中A和C是分别remote端的一个repository的名字和branch的名字，B是本地端branch的名字")])]),s._v(" "),l("li",[s._v("意思是把本地的B推送到remotes/A/C下")]),s._v(" "),l("li",[s._v("当B==C时可以直接省略为：git push A B")])])])])])])]),s._v(" "),l("li",[s._v("delete\n"),l("ul",[l("li",[s._v("remote\n"),l("ul",[l("li",[s._v("git push origin :A\n"),l("ul",[l("li",[s._v("推送一个空分支到远程分支，就相当于删除远程分支")])])]),s._v(" "),l("li",[s._v("git push origin --delete A")])])]),s._v(" "),l("li",[s._v("local\n"),l("ul",[l("li",[s._v("git branch -D dev")])])])])]),s._v(" "),l("li",[s._v("tag\n"),l("ul",[l("li",[s._v("git tag -a v0.0.1 -m 'tag message to describe this version'")]),s._v(" "),l("li",[s._v("git push origin v0.0.1")])])])]),s._v(" "),l("h2",{attrs:{id:"problems"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#problems"}},[s._v("#")]),s._v(" Problems")]),s._v(" "),l("ol",[l("li",[s._v("在 ubuntu 中移动 50000 张图片的图片的时候遇到如下问题："),l("em",[s._v("-bash: /bin/mv: Argument list too long")]),s._v(" "),l("ul",[l("li",[s._v("使用 "),l("code",[s._v('find sourcePath/ -type f -name "*.*" -exec mv {} targetPath/ \\;')]),s._v(" 可以解决，注意不能缺少结尾的 "),l("strong",[s._v(";")])])])])])])}),[],!1,null,null,null);e.default=t.exports}}]);