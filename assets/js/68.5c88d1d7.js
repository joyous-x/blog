(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{544:function(v,_,t){"use strict";t.r(_);var e=t(15),d=function(v){v.options.__data__block__={mermaid_64a542a0:"graph LR\n    A[运行库] --\x3e B[c/c++ 运行库]\n    A[运行库] --\x3e C[os api 运行库]\n    A[运行库] --\x3e D[编译器扩展功能 运行库]\n    B --\x3e E[动态]\n    B --\x3e F[静态]\n    C --\x3e G[sdk 版本 和 os 版本的兼容]\n    D --\x3e |例如| H[根据C++标准提供的编译器扩展功能, 如 OpenMP]\n",mermaid_64a5429e:"graph LR\n    A[运行库] --\x3e B[c/c++ 运行库]\n    A[运行库] --\x3e C[os api 运行库]\n    A[运行库] --\x3e D[编译器扩展功能 运行库]\n    B --\x3e E[动态]\n    B --\x3e F[静态]\n    C --\x3e G[sdk 版本 和 os 版本的兼容]\n    D --\x3e |例如| H[根据C++标准提供的编译器扩展功能, 如 OpenMP]\n",mermaid_64a54296:"graph LR\n    A[运行库] --\x3e B[c/c++ 运行库]\n    A[运行库] --\x3e C[os api 运行库]\n    A[运行库] --\x3e D[编译器扩展功能 运行库]\n    B --\x3e E[动态]\n    B --\x3e F[静态]\n    C --\x3e G[sdk 版本 和 os 版本的兼容]\n    D --\x3e |例如| H[根据C++标准提供的编译器扩展功能, 如 OpenMP]\n"}},i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"运行时库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行时库"}},[v._v("#")]),v._v(" 运行时库")]),v._v(" "),t("p",[v._v("在用 visual studio 进行开发时，"),t("em",[v._v("属性->常规")]),v._v(' 设置页面里看到的 "Windows SDK 版本" 和 "平台工具集" 两个属性，是否不明白用途？开发的程序发布后经常遇到提示缺少'),t("em",[v._v("msvcp140.dll")]),v._v(" 或 "),t("em",[v._v("msvcr100.dll")]),v._v(' 或者其他的运行库文件？是否经常遇到安装软件时提示需要安装 "vc_redist.x86.exe" 文件？这里会为你解答这些疑惑。')]),v._v(" "),t("h2",{attrs:{id:"一-windows-sdk-版本-和-平台工具集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-windows-sdk-版本-和-平台工具集"}},[v._v("#")]),v._v(' 一 "Windows SDK 版本" 和 "平台工具集"')]),v._v(" "),t("h3",{attrs:{id:"windows-sdk-版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows-sdk-版本"}},[v._v("#")]),v._v(' "Windows SDK 版本"')]),v._v(" "),t("p",[v._v("此属性指定用于生成项目的 "),t("code",[v._v("Windows SDK")]),v._v(' 的版本。"Windows SDK 版本" 是 '),t("code",[v._v("Visual Studio 2019")]),v._v(" 中的属性名，在 "),t("code",[v._v("~ Visual Studio 2015")]),v._v(' 中名为 "目标平台版本"。')]),v._v(" "),t("p",[v._v("如果你的应用程序可以利用此 "),t("code",[v._v("Windows SDK")]),v._v(" 版本中的功能，但仍可在不使用这些功能的早期 Windows 版本上运行（可能会丢失某些功能），则此属性和 "),t("strong",[v._v("目标平台最小版本")]),v._v(" 属性的值可能不同。 如果是这样，则您的代码应在运行时检查其正在运行的平台的版本，并禁用旧平台版本中不可用的功能。")]),v._v(" "),t("p",[v._v("此外，我们需要注意：")]),v._v(" "),t("ul",[t("li",[v._v("预处理器宏 "),t("code",[v._v("_WIN32_WINNT，WINVER")]),v._v(" 指定代码支持的最低操作系统版本")]),v._v(" "),t("li",[v._v("任何给定的 Windows SDK 大多都与 Windows SDK 的较早版本向后兼容\n"),t("ul",[t("li",[v._v("这允许我们使用较新的 "),t("code",[v._v("Windows SDK")]),v._v(" 版本，但运行在不使用这些功能的早期 Windows 版本上")])])]),v._v(" "),t("li",[t("code",[v._v("_WIN32_WINNT，WINVER")]),v._v(" 和 "),t("code",[v._v("NTDDI_VERSION")]),v._v(' 宏以及 "平台工具集" 字段，它们共同决定了应用程序可以运行的 Windows 系统版本')])]),v._v(" "),t("p",[v._v("如果您的应用程序需要在 Windows XP 上运行，则必须选择一个以_xp结尾的 "),t("strong",[v._v("平台工具集")]),v._v("，选择一个较旧的 Windows SDK 版本并设置 "),t("code",[v._v("_WIN32_WINNT，WINVER")]),v._v(" 和 "),t("code",[v._v("NTDDI_VERSION")]),v._v(" 宏。")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("    C ++项目=>属性=>配置属性=>常规\n        目标平台版本= 10  (使用此SDK，您可以利用Windows 10操作系统的功能)\n    将名为 TargetVer.h 的头文件添加到您的项目中，该文件包含以下预处理器宏：\n        #define WINVER 0x0603 // Windows 8.1\n        #define _WIN32_WINNT 0x0603 // Windows 8.1\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("    C ++项目=>属性=>配置属性=>常规\n        目标平台版本= 10  (使用此SDK，您可以利用Windows 10操作系统的功能)\n    将名为 TargetVer.h 的头文件添加到您的项目中，该文件包含以下预处理器宏：\n        #define WINVER 0x0603 // Windows 8.1\n        #define _WIN32_WINNT 0x0603 // Windows 8.1\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("p",[v._v("例如，我们可以使用以下配置C ++项目：")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("    C ++项目=>属性=>配置属性=>常规\n        目标平台版本= 10  (使用此SDK，您可以利用Windows 10操作系统的功能)\n    将名为 TargetVer.h 的头文件添加到您的项目中，该文件包含以下预处理器宏：\n        #define WINVER 0x0603 // Windows 8.1\n        #define _WIN32_WINNT 0x0603 // Windows 8.1\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("h3",{attrs:{id:"平台工具集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#平台工具集"}},[v._v("#")]),v._v(' "平台工具集"')]),v._v(" "),t("p",[v._v("此属性指定用于生成当前配置的工具集。包含了(不限于)需要为 C++ 项目指定的以下内容：")]),v._v(" "),t("ul",[t("li",[v._v("编译器\n"),t("ul",[t("li",[v._v("例如：v142 导致使用 Visual Studio 2019 编译器")])])]),v._v(" "),t("li",[v._v("Visual C ++库\n"),t("ul",[t("li",[v._v("例如：v142 表示您正在使用 Visual Studio 2019 C++ 库，这意味着，您的应用程序在部署期间将需要 Visual Studio 2019 C++ 可再发行组件(MSVCRxxx.dll)\n"),t("ul",[t("li",[v._v("可再发行组件安装到："),t("code",[v._v("C:\\\\Windows\\\\")]),v._v(" 或 "),t("code",[v._v("C:\\\\Windows\\\\SysWOW64\\\\")])])])])])]),v._v(" "),t("li",[v._v("MSVCR\n"),t("ul",[t("li",[v._v("MS =微软，V =视觉，C =C++，R =可再发行")]),v._v(" "),t("li",[v._v("应用程序可以通过引用 "),t("code",[v._v("_MSC_VER")]),v._v(" 预处理程序宏来确定使用哪个 C++ 库")])])])]),v._v(" "),t("p",[v._v("另外，需要注意的是 Platform Toolset 是项目级别的设置(请参见 *.vcxproj 中的 PlatformToolset)，而所选的 Windows SDK Version 保存在其他位置。")]),v._v(" "),t("h2",{attrs:{id:"二-运行库-mt-mtd-md-mdd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-运行库-mt-mtd-md-mdd"}},[v._v("#")]),v._v(" 二 运行库(MT MTd MD MDd)")]),v._v(" "),t("p",[v._v("运行时库(Runtime Library), 也简称 CRT(C Run Time Library)。是程序在运行时所需要的库文件，通常运行时库是以 Lib 或 Dll 形式提供的。")]),v._v(" "),t("p",[v._v("Windows 下 C Runtime Library 是微软对 C 标准库函数的实现，这样每个程序可以直接使用 C 标准库的函数；后来出现了 C++，于是又在 C Runtime Library 基础上开发了 C++ Runtime Library，实现了对 C++ 标准库的支持。因此现在 Windows 下的 C/C++ 运行时库既包含 C 标准库，也包含 C++ 标准库。")]),v._v(" "),t("h3",{attrs:{id:"vs2013及以前版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vs2013及以前版本"}},[v._v("#")]),v._v(" VS2013及以前版本")]),v._v(" "),t("p",[v._v("VS2015以前版本 中的 Runtime Library 的类型有：CRT 和 C++ Standard Library.")]),v._v(" "),t("p",[v._v("This table lists the libraries that implement CRT initialization and termination.")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("简称")]),v._v(" "),t("th",[v._v("含义")]),v._v(" "),t("th",[v._v("依赖的库")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("Multi-Threaded")]),v._v(" "),t("td",[v._v("/MT")]),v._v(" "),t("td",[v._v("Release版的多线程静态库")]),v._v(" "),t("td",[v._v("libcmt.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded Debug")]),v._v(" "),t("td",[v._v("/MTd")]),v._v(" "),t("td",[v._v("Debug版的多线程静态库")]),v._v(" "),t("td",[v._v("libcmtd.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL")]),v._v(" "),t("td",[v._v("/MD")]),v._v(" "),t("td",[v._v("Release版的多线程动态库")]),v._v(" "),t("td",[v._v("msvcrt.lib + msvcr*.dll")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL Debug")]),v._v(" "),t("td",[v._v("/MDd")]),v._v(" "),t("td",[v._v("Debug版的多线程动态库")]),v._v(" "),t("td",[v._v("msvcrtd.lib + msvcr*d.dll")])])])]),v._v(" "),t("p",[v._v("此外，为了支持 .NET 和 C 的混编，引入了 "),t("code",[v._v("/clr")]),v._v(" 选项(只支持 /MD 选项)：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("选项")]),v._v(" "),t("th",[v._v("版本")]),v._v(" "),t("th",[v._v("依赖的库")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("/clr")]),v._v(" "),t("td",[v._v("Release")]),v._v(" "),t("td",[v._v("msvcmrt.lib")])]),v._v(" "),t("tr",[t("td",[v._v("/clr")]),v._v(" "),t("td",[v._v("Debug")]),v._v(" "),t("td",[v._v("msvcmrtd.lib")])])])]),v._v(" "),t("p",[v._v("C++ Standard Library .lib files")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("简称")]),v._v(" "),t("th",[v._v("含义")]),v._v(" "),t("th",[v._v("依赖的库")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("Multi-Threaded")]),v._v(" "),t("td",[v._v("/MT")]),v._v(" "),t("td",[v._v("Release版的多线程静态库")]),v._v(" "),t("td",[v._v("libcpmt.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded Debug")]),v._v(" "),t("td",[v._v("/MTd")]),v._v(" "),t("td",[v._v("Debug版的多线程静态库")]),v._v(" "),t("td",[v._v("libcpmtd.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL")]),v._v(" "),t("td",[v._v("/MD")]),v._v(" "),t("td",[v._v("Release版的多线程动态库")]),v._v(" "),t("td",[v._v("msvcprt.lib + msvcp*.dll")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL Debug")]),v._v(" "),t("td",[v._v("/MDd")]),v._v(" "),t("td",[v._v("Debug版的多线程动态库")]),v._v(" "),t("td",[v._v("msvcprtd.lib + msvcp*d.dll")])])])]),v._v(" "),t("h3",{attrs:{id:"vs2015及以后版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vs2015及以后版本"}},[v._v("#")]),v._v(" VS2015及以后版本")]),v._v(" "),t("p",[v._v("VS2015及以后版本 中 CRT 被拆分成了两部分：UCRT 和 vcruntime library。(注意，C++ Standard Librar 跟原来一样，这里就不再重复。)")]),v._v(" "),t("p",[v._v("The following table lists the libraries that implement the UCRT.")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("简称")]),v._v(" "),t("th",[v._v("含义")]),v._v(" "),t("th",[v._v("依赖的库")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("Multi-Threaded")]),v._v(" "),t("td",[v._v("/MT")]),v._v(" "),t("td",[v._v("Release版的多线程静态库")]),v._v(" "),t("td",[v._v("libucrt.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded Debug")]),v._v(" "),t("td",[v._v("/MTd")]),v._v(" "),t("td",[v._v("Debug版的多线程静态库")]),v._v(" "),t("td",[v._v("libucrtd.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL")]),v._v(" "),t("td",[v._v("/MD")]),v._v(" "),t("td",[v._v("Release版的多线程动态库")]),v._v(" "),t("td",[v._v("ucrt.lib + ucrtbase.dll")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL Debug")]),v._v(" "),t("td",[v._v("/MDd")]),v._v(" "),t("td",[v._v("Debug版的多线程动态库")]),v._v(" "),t("td",[v._v("ucrtd.lib + ucrtbased.dll")])])])]),v._v(" "),t("p",[v._v("This table lists the libraries that implement the vcruntime library.")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("简称")]),v._v(" "),t("th",[v._v("含义")]),v._v(" "),t("th",[v._v("依赖的库")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("Multi-Threaded")]),v._v(" "),t("td",[v._v("/MT")]),v._v(" "),t("td",[v._v("Release版的多线程静态库")]),v._v(" "),t("td",[v._v("libvcruntime.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded Debug")]),v._v(" "),t("td",[v._v("/MTd")]),v._v(" "),t("td",[v._v("Debug版的多线程静态库")]),v._v(" "),t("td",[v._v("libvcruntimed.lib")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL")]),v._v(" "),t("td",[v._v("/MD")]),v._v(" "),t("td",[v._v("Release版的多线程动态库")]),v._v(" "),t("td",[v._v("vcruntime.lib + vcruntime*.dll")])]),v._v(" "),t("tr",[t("td",[v._v("Multi-Threaded DLL Debug")]),v._v(" "),t("td",[v._v("/MDd")]),v._v(" "),t("td",[v._v("Debug版的多线程动态库")]),v._v(" "),t("td",[v._v("vcruntimed.lib + vcruntime*d.dll")])])])]),v._v(" "),t("p",[v._v("根据上表，我们可以发现 "),t("code",[v._v("MT MTd MD MDd")]),v._v(" 的依赖不同。至于 动态库、静态库 的不同，大伙可以自行查找资料(主要区别在于一个进程中的多个模块使用的同一个库是否共享)~")]),v._v(" "),t("h2",{attrs:{id:"三-动态链接-库文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-动态链接-库文件"}},[v._v("#")]),v._v(" 三 (动态链接)库文件")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("msvcrt*.dll")]),v._v(" "),t("ul",[t("li",[v._v("它是 "),t("code",[v._v("vc6")]),v._v(" 以及之前的 "),t("code",[v._v("CRT")]),v._v(" 库，特点是 "),t("code",[v._v("c 和 c++")]),v._v(" 的函数都在一个文件")])])]),v._v(" "),t("li",[t("code",[v._v("msvcp*.dll")]),v._v(" 和 "),t("code",[v._v("msvcr*.dll")]),v._v(" "),t("ul",[t("li",[v._v("它是 "),t("code",[v._v("vc7 ~ vs2013")]),v._v("使用 "),t("code",[v._v("CRT")]),v._v(" 库")]),v._v(" "),t("li",[t("code",[v._v("c 和 c++")]),v._v(" 的函数是分开存放在不同文件的，"),t("code",[v._v("c")]),v._v(" 对应 "),t("code",[v._v("msvcr*.dll")]),v._v("， "),t("code",[v._v("c++")]),v._v(" 对应 "),t("code",[v._v("msvcp*.dll")])])])]),v._v(" "),t("li",[t("code",[v._v("msvcp*.dll")]),v._v("、"),t("code",[v._v("ucrtbase.dll")]),v._v(" 和 "),t("code",[v._v("vcruntime*.dll")]),v._v(" "),t("ul",[t("li",[v._v("它是 "),t("code",[v._v("vs2015 ~")]),v._v("使用的 "),t("code",[v._v("CRT")]),v._v(" 库")]),v._v(" "),t("li",[t("code",[v._v("vs2015")]),v._v(" 已经没有 "),t("code",[v._v("msvcr140.dll")]),v._v(" 了, 它被拆成了两个文件：\n"),t("ul",[t("li",[t("code",[v._v("ucrtbase.dll")]),v._v(" 包含标准c库的内容\n"),t("ul",[t("li",[v._v("UCRT(The Universal CRT) contains the functions and globals exported by the standard C99 CRT library.")])])]),v._v(" "),t("li",[t("code",[v._v("vcruntime140.dll")]),v._v(" 包含 c++ 运行期需要处理的特别功能，如：调试支持、异常处理、以及耦合到相关编译器的功能。")])])])])]),v._v(" "),t("li",[t("code",[v._v("api-ms-win-*.dll")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("vs2015")]),v._v(" 以及之后版本的还需要 "),t("code",[v._v("Windows API Sets (形如api-ms-win-crt-runtime-l1-1-0.dll)")])]),v._v(" "),t("li",[v._v("所有版本的 Windows 10 共享一个通用的操作系统组件基础，称为"),t("code",[v._v("core OS")]),v._v("（在某些情况下，此通用基础也称为 "),t("code",[v._v("OneCore")]),v._v("）。在核心操作系统组件中，"),t("code",[v._v("Win32 API")]),v._v(" 被组织成称为 API 集的功能组。")]),v._v(" "),t("li",[t("code",[v._v("Windows API Sets")]),v._v(" 主要是为了以下场景：跨各种不同的 win10 设备平台(如 HoloLens, Xbox, and other devices running Windows 10x)、为各平台提供最小的可用 API 集合")])])])]),v._v(" "),t("p",[v._v("还有一些其他的库文件如：")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("vcomp140.dll")]),v._v(" "),t("ul",[t("li",[v._v("它是 "),t("code",[v._v("Microsoft Visual C++ Redistributable Packages for Visual Studio 2015")]),v._v(" 的一部分，用于支持 OpenMP 功能")]),v._v(" "),t("li",[v._v("这个文件相关的功能，目前只能 "),t("strong",[v._v("动态链接")])])])])]),v._v(" "),t("p",[v._v("相关的版本信息如下：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("MSVC")]),v._v(" "),t("th",[v._v("MSC_VER (Visual Studio)")]),v._v(" "),t("th",[v._v("C/C++ Run Time")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("MSVC++ 14.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1900 (Visual Studio 2015)")]),v._v(" "),t("td",[v._v("ucrtbase.dll vcruntime140.dll msvcp140.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 12.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1800 (Visual Studio 2013)")]),v._v(" "),t("td",[v._v("msvcr120.dll msvcp120.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 11.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1700 (Visual Studio 2012)")]),v._v(" "),t("td",[v._v("msvcr110.dll msvcp110.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 10.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1600 (Visual Studio 2010)")]),v._v(" "),t("td",[v._v("msvcr100.dll msvcp100.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 9.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1500 (Visual Studio 2008)")]),v._v(" "),t("td",[v._v("msvcr90.dll msvcp90.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 8.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1400 (Visual Studio 2005)")]),v._v(" "),t("td",[v._v("msvcr80.dll msvcp80.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 7.1")]),v._v(" "),t("td",[v._v("_MSC_VER == 1310 (Visual Studio .NET 2003)")]),v._v(" "),t("td",[v._v("msvcr71.dll msvcp71.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 7.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1300 (Visual Studio .NET 2002)")]),v._v(" "),t("td",[v._v("msvcr70.dll msvcp70.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 6.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1200 (Visual Studio 6.0)")]),v._v(" "),t("td",[v._v("msvcrt.dll")])]),v._v(" "),t("tr",[t("td",[v._v("MSVC++ 5.0")]),v._v(" "),t("td",[v._v("_MSC_VER == 1100 (Visual Studio 97)")]),v._v(" "),t("td",[v._v("msvcrt.dll")])])])]),v._v(" "),t("h2",{attrs:{id:"四-思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-思考"}},[v._v("#")]),v._v(" 四 思考")]),v._v(" "),t("ol",[t("li",[v._v("c++ 版本的选择 怎么生效的？")]),v._v(" "),t("li",[v._v("为什么运行库会有这么多历史变化？")]),v._v(" "),t("li",[t("Mermaid",{attrs:{id:"mermaid_64a542a0",graph:v.$dataBlock.mermaid_64a542a0}}),t("Mermaid",{attrs:{id:"mermaid_64a5429e",graph:v.$dataBlock.mermaid_64a5429e}}),v._v("总结"),t("Mermaid",{attrs:{id:"mermaid_64a54296",graph:v.$dataBlock.mermaid_64a54296}})],1)]),v._v(" "),t("h2",{attrs:{id:"五-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-reference"}},[v._v("#")]),v._v(" 五 Reference")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/cpp/build/reference/general-property-page-project?view=msvc-140",target:"_blank",rel:"noopener noreferrer"}},[v._v("“常规”属性页（项目）"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features?view=msvc-160",target:"_blank",rel:"noopener noreferrer"}},[v._v("C runtime (CRT) and C++ Standard Library (STL) .lib files"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/win32/apiindex/windows-apisets",target:"_blank",rel:"noopener noreferrer"}},[v._v("Windows API sets"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/lidabo/p/7856748.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("vs2015部署---下一代VC运行时库系统：the Universal CRT"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://wiki.jikexueyuan.com/project/visual-studio/13.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("带你玩转 Visual Studio——带你跳出坑爹的 Runtime Library 坑"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);"function"==typeof d&&d(i);_.default=i.exports}}]);